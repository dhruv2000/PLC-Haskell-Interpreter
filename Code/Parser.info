-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.9 from Parser.y
-----------------------------------------------------------------------------

state 7 contains 1 shift/reduce conflicts.
state 75 contains 10 shift/reduce conflicts.
state 76 contains 10 shift/reduce conflicts.
state 77 contains 10 shift/reduce conflicts.
state 78 contains 10 shift/reduce conflicts.
state 79 contains 10 shift/reduce conflicts.
state 80 contains 10 shift/reduce conflicts.
state 82 contains 2 shift/reduce conflicts.
state 83 contains 2 shift/reduce conflicts.
state 85 contains 1 shift/reduce conflicts.
state 90 contains 10 shift/reduce conflicts.
state 91 contains 10 shift/reduce conflicts.
state 93 contains 2 shift/reduce conflicts.
state 94 contains 2 shift/reduce conflicts.
state 95 contains 2 shift/reduce conflicts.
state 96 contains 2 shift/reduce conflicts.
state 97 contains 2 shift/reduce conflicts.
state 98 contains 2 shift/reduce conflicts.
state 99 contains 2 shift/reduce conflicts.
state 100 contains 2 shift/reduce conflicts.

terminal int is unused
terminal '=' is unused
terminal 'string' is unused
terminal 'ID_List' is unused
terminal 'program' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_happyParser -> Program                      (0)
	Program -> Defs 'begin' Statements 'end'           (1)
	Defs ->                                            (2)
	Defs -> Definition Defs                            (3)
	Definition -> 'var' ID ':' Type ';'                (4)
	Definition -> 'var' ID ':' Type ':=' Exp ';'       (5)
	Definition -> 'var' ID_List ':' Type ';'           (6)
	Definition -> 'var' ID_List ':' Type ':=' Exp ';'   (7)
	Type -> 'boolean'                                  (8)
	Type -> 'real'                                     (9)
	Type -> 'const'                                    (10)
	ID_List -> ID                                      (11)
	ID_List -> ID ',' ID_List                          (12)
	Exp -> '+' Exp                                     (13)
	Exp -> '-' Exp                                     (14)
	Exp -> 'sqrt' Exp                                  (15)
	Exp -> 'ln' Exp                                    (16)
	Exp -> 'sin' Exp                                   (17)
	Exp -> 'cos' Exp                                   (18)
	Exp -> 'exp' Exp                                   (19)
	Exp -> Exp '/' Exp                                 (20)
	Exp -> Exp '-' Exp                                 (21)
	Exp -> Exp '+' Exp                                 (22)
	Exp -> Exp '*' Exp                                 (23)
	Exp -> '(' Exp ')'                                 (24)
	Exp -> ID                                          (25)
	Exp -> float                                       (26)
	Exp -> 'true'                                      (27)
	Exp -> 'false'                                     (28)
	Exp -> 'not' Exp                                   (29)
	Exp -> Exp '<' Exp                                 (30)
	Exp -> Exp '>' Exp                                 (31)
	Exp -> Exp '<=' Exp                                (32)
	Exp -> Exp '>=' Exp                                (33)
	Exp -> Exp 'AND' Exp                               (34)
	Exp -> Exp 'OR' Exp                                (35)
	Statements ->                                      (36)
	Statements -> Statement Statements                 (37)
	Statement -> Definition                            (38)
	Statement -> ID ':=' '(' Exp ')' ';'               (39)
	Statement -> ID ':=' Exp ';'                       (40)
	Statement -> 'if' '(' Exp ')'                      (41)
	Statement -> 'writeln' '(' Exp ')' ';'             (42)
	Statement -> 'if' '(' Exp ')' 'then' 'begin' Statements 'end'   (43)
	Statement -> 'while' '(' Exp ')' 'do' 'begin' Statements 'end'   (44)
	Statement -> 'for' ID ':=' Exp 'to' Exp 'do' 'begin' Statements 'end'   (45)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	int            { Token _ (TokenInt $$) }
	float          { Token _ (TokenFloat $$) }
	ID             { Token _ (TokenID $$) }
	'<'            { Token _ (TokenOp "<") }
	'>'            { Token _ (TokenOp ">") }
	'<='           { Token _ (TokenOp "<=") }
	'>='           { Token _ (TokenOp ">=") }
	'+'            { Token _ (TokenOp "+") }
	'-'            { Token _ (TokenOp "-") }
	'*'            { Token _ (TokenOp "*") }
	'/'            { Token _ (TokenOp "/") }
	'='            { Token _ (TokenOp "=") }
	':='           { Token _ (TokenOp ":=") }
	'('            { Token _ (TokenK  "(") }
	')'            { Token _ (TokenK  ")") }
	'begin'        { Token _ (TokenK "begin") }
	'end'          { Token _ (TokenK "end") }
	'true'         { Token _ (TokenK "true") }
	'false'        { Token _ (TokenK "false") }
	'sqrt'         { Token _ (TokenK "sqrt") }
	'ln'           { Token _ (TokenK "ln") }
	'sin'          { Token _ (TokenK "sin") }
	'exp'          { Token _ (TokenK "exp") }
	'cos'          { Token _ (TokenK "false") }
	'AND'          { Token _ (TokenK "AND") }
	'OR'           { Token _ (TokenK "OR") }
	'not'          { Token _ (TokenK "not") }
	'for'          { Token _ (TokenK "for") }
	'to'           { Token _ (TokenK "to") }
	'while'        { Token _ (TokenK "while") }
	'do'           { Token _ (TokenK "do") }
	'var'          { Token _ (TokenK "var") }
	':'            { Token _ (TokenK ":") }
	';'            { Token _ (TokenK ";") }
	'boolean'      { Token _ (TokenK "boolean") }
	'real'         { Token _ (TokenK "real") }
	'const'        { Token _ (TokenK "const") }
	'string'       { Token _ (TokenK "string") }
	','            { Token _ (TokenK ",") }
	'ID_List'      { Token _ (TokenK "ID_List") }
	'program'      { Token _ (TokenK "program") }
	'writeln'      { Token _ (TokenK "writeln") }
	'if'           { Token _ (TokenK "if") }
	'then'         { Token _ (TokenK "then") }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_happyParser rule  0
	Program         rule  1
	Defs            rules 2, 3
	Definition      rules 4, 5, 6, 7
	Type            rules 8, 9, 10
	ID_List         rules 11, 12
	Exp             rules 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
	Statements      rules 36, 37
	Statement       rules 38, 39, 40, 41, 42, 43, 44, 45

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'begin'        reduce using rule 2
	'var'          shift, and enter state 4

	Program        goto state 5
	Defs           goto state 2
	Definition     goto state 3

State 1


	'var'          shift, and enter state 4

	Defs           goto state 2
	Definition     goto state 3

State 2

	Program -> Defs . 'begin' Statements 'end'          (rule 1)

	'begin'        shift, and enter state 9


State 3

	Defs -> Definition . Defs                           (rule 3)

	'begin'        reduce using rule 2
	'var'          shift, and enter state 4

	Defs           goto state 8
	Definition     goto state 3

State 4

	Definition -> 'var' . ID ':' Type ';'               (rule 4)
	Definition -> 'var' . ID ':' Type ':=' Exp ';'      (rule 5)
	Definition -> 'var' . ID_List ':' Type ';'          (rule 6)
	Definition -> 'var' . ID_List ':' Type ':=' Exp ';'    (rule 7)

	ID             shift, and enter state 7

	ID_List        goto state 6

State 5

	%start_happyParser -> Program .                     (rule 0)

	%eof           accept


State 6

	Definition -> 'var' ID_List . ':' Type ';'          (rule 6)
	Definition -> 'var' ID_List . ':' Type ':=' Exp ';'    (rule 7)

	':'            shift, and enter state 20


State 7

	Definition -> 'var' ID . ':' Type ';'               (rule 4)
	Definition -> 'var' ID . ':' Type ':=' Exp ';'      (rule 5)
	ID_List -> ID .                                     (rule 11)
	ID_List -> ID . ',' ID_List                         (rule 12)

	':'            shift, and enter state 18
			(reduce using rule 11)

	','            shift, and enter state 19


State 8

	Defs -> Definition Defs .                           (rule 3)

	'begin'        reduce using rule 3


State 9

	Program -> Defs 'begin' . Statements 'end'          (rule 1)

	ID             shift, and enter state 13
	'end'          reduce using rule 36
	'for'          shift, and enter state 14
	'while'        shift, and enter state 15
	'var'          shift, and enter state 4
	'writeln'      shift, and enter state 16
	'if'           shift, and enter state 17

	Definition     goto state 10
	Statements     goto state 11
	Statement      goto state 12

State 10

	Statement -> Definition .                           (rule 38)

	ID             reduce using rule 38
	'end'          reduce using rule 38
	'for'          reduce using rule 38
	'while'        reduce using rule 38
	'var'          reduce using rule 38
	'writeln'      reduce using rule 38
	'if'           reduce using rule 38


State 11

	Program -> Defs 'begin' Statements . 'end'          (rule 1)

	'end'          shift, and enter state 34


State 12

	Statements -> Statement . Statements                (rule 37)

	ID             shift, and enter state 13
	'end'          reduce using rule 36
	'for'          shift, and enter state 14
	'while'        shift, and enter state 15
	'var'          shift, and enter state 4
	'writeln'      shift, and enter state 16
	'if'           shift, and enter state 17

	Definition     goto state 10
	Statements     goto state 33
	Statement      goto state 12

State 13

	Statement -> ID . ':=' '(' Exp ')' ';'              (rule 39)
	Statement -> ID . ':=' Exp ';'                      (rule 40)

	':='           shift, and enter state 32


State 14

	Statement -> 'for' . ID ':=' Exp 'to' Exp 'do' 'begin' Statements 'end'    (rule 45)

	ID             shift, and enter state 31


State 15

	Statement -> 'while' . '(' Exp ')' 'do' 'begin' Statements 'end'    (rule 44)

	'('            shift, and enter state 30


State 16

	Statement -> 'writeln' . '(' Exp ')' ';'            (rule 42)

	'('            shift, and enter state 29


State 17

	Statement -> 'if' . '(' Exp ')'                     (rule 41)
	Statement -> 'if' . '(' Exp ')' 'then' 'begin' Statements 'end'    (rule 43)

	'('            shift, and enter state 28


State 18

	Definition -> 'var' ID ':' . Type ';'               (rule 4)
	Definition -> 'var' ID ':' . Type ':=' Exp ';'      (rule 5)

	'boolean'      shift, and enter state 22
	'real'         shift, and enter state 23
	'const'        shift, and enter state 24

	Type           goto state 27

State 19

	ID_List -> ID ',' . ID_List                         (rule 12)

	ID             shift, and enter state 26

	ID_List        goto state 25

State 20

	Definition -> 'var' ID_List ':' . Type ';'          (rule 6)
	Definition -> 'var' ID_List ':' . Type ':=' Exp ';'    (rule 7)

	'boolean'      shift, and enter state 22
	'real'         shift, and enter state 23
	'const'        shift, and enter state 24

	Type           goto state 21

State 21

	Definition -> 'var' ID_List ':' Type . ';'          (rule 6)
	Definition -> 'var' ID_List ':' Type . ':=' Exp ';'    (rule 7)

	':='           shift, and enter state 56
	';'            shift, and enter state 57


State 22

	Type -> 'boolean' .                                 (rule 8)

	':='           reduce using rule 8
	';'            reduce using rule 8


State 23

	Type -> 'real' .                                    (rule 9)

	':='           reduce using rule 9
	';'            reduce using rule 9


State 24

	Type -> 'const' .                                   (rule 10)

	':='           reduce using rule 10
	';'            reduce using rule 10


State 25

	ID_List -> ID ',' ID_List .                         (rule 12)

	':'            reduce using rule 12


State 26

	ID_List -> ID .                                     (rule 11)
	ID_List -> ID . ',' ID_List                         (rule 12)

	':'            reduce using rule 11
	','            shift, and enter state 19


State 27

	Definition -> 'var' ID ':' Type . ';'               (rule 4)
	Definition -> 'var' ID ':' Type . ':=' Exp ';'      (rule 5)

	':='           shift, and enter state 54
	';'            shift, and enter state 55


State 28

	Statement -> 'if' '(' . Exp ')'                     (rule 41)
	Statement -> 'if' '(' . Exp ')' 'then' 'begin' Statements 'end'    (rule 43)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 53

State 29

	Statement -> 'writeln' '(' . Exp ')' ';'            (rule 42)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 52

State 30

	Statement -> 'while' '(' . Exp ')' 'do' 'begin' Statements 'end'    (rule 44)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 50

State 31

	Statement -> 'for' ID . ':=' Exp 'to' Exp 'do' 'begin' Statements 'end'    (rule 45)

	':='           shift, and enter state 49


State 32

	Statement -> ID ':=' . '(' Exp ')' ';'              (rule 39)
	Statement -> ID ':=' . Exp ';'                      (rule 40)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 40
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 35

State 33

	Statements -> Statement Statements .                (rule 37)

	'end'          reduce using rule 37


State 34

	Program -> Defs 'begin' Statements 'end' .          (rule 1)

	%eof           reduce using rule 1


State 35

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)
	Statement -> ID ':=' Exp . ';'                      (rule 40)

	'<'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<='           shift, and enter state 62
	'>='           shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'AND'          shift, and enter state 69
	'OR'           shift, and enter state 70
	';'            shift, and enter state 84


State 36

	Exp -> float .                                      (rule 26)

	'<'            reduce using rule 26
	'>'            reduce using rule 26
	'<='           reduce using rule 26
	'>='           reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	')'            reduce using rule 26
	'AND'          reduce using rule 26
	'OR'           reduce using rule 26
	'to'           reduce using rule 26
	'do'           reduce using rule 26
	';'            reduce using rule 26


State 37

	Exp -> ID .                                         (rule 25)

	'<'            reduce using rule 25
	'>'            reduce using rule 25
	'<='           reduce using rule 25
	'>='           reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	')'            reduce using rule 25
	'AND'          reduce using rule 25
	'OR'           reduce using rule 25
	'to'           reduce using rule 25
	'do'           reduce using rule 25
	';'            reduce using rule 25


State 38

	Exp -> '+' . Exp                                    (rule 13)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 83

State 39

	Exp -> '-' . Exp                                    (rule 14)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 82

State 40

	Exp -> '(' . Exp ')'                                (rule 24)
	Statement -> ID ':=' '(' . Exp ')' ';'              (rule 39)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 81

State 41

	Exp -> 'true' .                                     (rule 27)

	'<'            reduce using rule 27
	'>'            reduce using rule 27
	'<='           reduce using rule 27
	'>='           reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	')'            reduce using rule 27
	'AND'          reduce using rule 27
	'OR'           reduce using rule 27
	'to'           reduce using rule 27
	'do'           reduce using rule 27
	';'            reduce using rule 27


State 42

	Exp -> 'false' .                                    (rule 28)

	'<'            reduce using rule 28
	'>'            reduce using rule 28
	'<='           reduce using rule 28
	'>='           reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	')'            reduce using rule 28
	'AND'          reduce using rule 28
	'OR'           reduce using rule 28
	'to'           reduce using rule 28
	'do'           reduce using rule 28
	';'            reduce using rule 28


State 43

	Exp -> 'sqrt' . Exp                                 (rule 15)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 80

State 44

	Exp -> 'ln' . Exp                                   (rule 16)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 79

State 45

	Exp -> 'sin' . Exp                                  (rule 17)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 78

State 46

	Exp -> 'exp' . Exp                                  (rule 19)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 77

State 47

	Exp -> 'cos' . Exp                                  (rule 18)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 76

State 48

	Exp -> 'not' . Exp                                  (rule 29)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 75

State 49

	Statement -> 'for' ID ':=' . Exp 'to' Exp 'do' 'begin' Statements 'end'    (rule 45)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 74

State 50

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)
	Statement -> 'while' '(' Exp . ')' 'do' 'begin' Statements 'end'    (rule 44)

	'<'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<='           shift, and enter state 62
	'>='           shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            shift, and enter state 73
	'AND'          shift, and enter state 69
	'OR'           shift, and enter state 70


State 51

	Exp -> '(' . Exp ')'                                (rule 24)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 72

State 52

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)
	Statement -> 'writeln' '(' Exp . ')' ';'            (rule 42)

	'<'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<='           shift, and enter state 62
	'>='           shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            shift, and enter state 71
	'AND'          shift, and enter state 69
	'OR'           shift, and enter state 70


State 53

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)
	Statement -> 'if' '(' Exp . ')'                     (rule 41)
	Statement -> 'if' '(' Exp . ')' 'then' 'begin' Statements 'end'    (rule 43)

	'<'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<='           shift, and enter state 62
	'>='           shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            shift, and enter state 68
	'AND'          shift, and enter state 69
	'OR'           shift, and enter state 70


State 54

	Definition -> 'var' ID ':' Type ':=' . Exp ';'      (rule 5)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 59

State 55

	Definition -> 'var' ID ':' Type ';' .               (rule 4)

	ID             reduce using rule 4
	'begin'        reduce using rule 4
	'end'          reduce using rule 4
	'for'          reduce using rule 4
	'while'        reduce using rule 4
	'var'          reduce using rule 4
	'writeln'      reduce using rule 4
	'if'           reduce using rule 4


State 56

	Definition -> 'var' ID_List ':' Type ':=' . Exp ';'    (rule 7)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 58

State 57

	Definition -> 'var' ID_List ':' Type ';' .          (rule 6)

	ID             reduce using rule 6
	'begin'        reduce using rule 6
	'end'          reduce using rule 6
	'for'          reduce using rule 6
	'while'        reduce using rule 6
	'var'          reduce using rule 6
	'writeln'      reduce using rule 6
	'if'           reduce using rule 6


State 58

	Definition -> 'var' ID_List ':' Type ':=' Exp . ';'    (rule 7)
	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<='           shift, and enter state 62
	'>='           shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'AND'          shift, and enter state 69
	'OR'           shift, and enter state 70
	';'            shift, and enter state 102


State 59

	Definition -> 'var' ID ':' Type ':=' Exp . ';'      (rule 5)
	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<='           shift, and enter state 62
	'>='           shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'AND'          shift, and enter state 69
	'OR'           shift, and enter state 70
	';'            shift, and enter state 101


State 60

	Exp -> Exp '<' . Exp                                (rule 30)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 100

State 61

	Exp -> Exp '>' . Exp                                (rule 31)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 99

State 62

	Exp -> Exp '<=' . Exp                               (rule 32)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 98

State 63

	Exp -> Exp '>=' . Exp                               (rule 33)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 97

State 64

	Exp -> Exp '+' . Exp                                (rule 22)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 96

State 65

	Exp -> Exp '-' . Exp                                (rule 21)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 95

State 66

	Exp -> Exp '*' . Exp                                (rule 23)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 94

State 67

	Exp -> Exp '/' . Exp                                (rule 20)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 93

State 68

	Statement -> 'if' '(' Exp ')' .                     (rule 41)
	Statement -> 'if' '(' Exp ')' . 'then' 'begin' Statements 'end'    (rule 43)

	ID             reduce using rule 41
	'end'          reduce using rule 41
	'for'          reduce using rule 41
	'while'        reduce using rule 41
	'var'          reduce using rule 41
	'writeln'      reduce using rule 41
	'if'           reduce using rule 41
	'then'         shift, and enter state 92


State 69

	Exp -> Exp 'AND' . Exp                              (rule 34)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 91

State 70

	Exp -> Exp 'OR' . Exp                               (rule 35)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 90

State 71

	Statement -> 'writeln' '(' Exp ')' . ';'            (rule 42)

	';'            shift, and enter state 89


State 72

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> '(' Exp . ')'                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<='           shift, and enter state 62
	'>='           shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            shift, and enter state 88
	'AND'          shift, and enter state 69
	'OR'           shift, and enter state 70


State 73

	Statement -> 'while' '(' Exp ')' . 'do' 'begin' Statements 'end'    (rule 44)

	'do'           shift, and enter state 87


State 74

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)
	Statement -> 'for' ID ':=' Exp . 'to' Exp 'do' 'begin' Statements 'end'    (rule 45)

	'<'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<='           shift, and enter state 62
	'>='           shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'AND'          shift, and enter state 69
	'OR'           shift, and enter state 70
	'to'           shift, and enter state 86


State 75

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> 'not' Exp .                                  (rule 29)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            shift, and enter state 60
			(reduce using rule 29)

	'>'            shift, and enter state 61
			(reduce using rule 29)

	'<='           shift, and enter state 62
			(reduce using rule 29)

	'>='           shift, and enter state 63
			(reduce using rule 29)

	'+'            shift, and enter state 64
			(reduce using rule 29)

	'-'            shift, and enter state 65
			(reduce using rule 29)

	'*'            shift, and enter state 66
			(reduce using rule 29)

	'/'            shift, and enter state 67
			(reduce using rule 29)

	')'            reduce using rule 29
	'AND'          shift, and enter state 69
			(reduce using rule 29)

	'OR'           shift, and enter state 70
			(reduce using rule 29)

	'to'           reduce using rule 29
	'do'           reduce using rule 29
	';'            reduce using rule 29


State 76

	Exp -> 'cos' Exp .                                  (rule 18)
	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            shift, and enter state 60
			(reduce using rule 18)

	'>'            shift, and enter state 61
			(reduce using rule 18)

	'<='           shift, and enter state 62
			(reduce using rule 18)

	'>='           shift, and enter state 63
			(reduce using rule 18)

	'+'            shift, and enter state 64
			(reduce using rule 18)

	'-'            shift, and enter state 65
			(reduce using rule 18)

	'*'            shift, and enter state 66
			(reduce using rule 18)

	'/'            shift, and enter state 67
			(reduce using rule 18)

	')'            reduce using rule 18
	'AND'          shift, and enter state 69
			(reduce using rule 18)

	'OR'           shift, and enter state 70
			(reduce using rule 18)

	'to'           reduce using rule 18
	'do'           reduce using rule 18
	';'            reduce using rule 18


State 77

	Exp -> 'exp' Exp .                                  (rule 19)
	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            shift, and enter state 60
			(reduce using rule 19)

	'>'            shift, and enter state 61
			(reduce using rule 19)

	'<='           shift, and enter state 62
			(reduce using rule 19)

	'>='           shift, and enter state 63
			(reduce using rule 19)

	'+'            shift, and enter state 64
			(reduce using rule 19)

	'-'            shift, and enter state 65
			(reduce using rule 19)

	'*'            shift, and enter state 66
			(reduce using rule 19)

	'/'            shift, and enter state 67
			(reduce using rule 19)

	')'            reduce using rule 19
	'AND'          shift, and enter state 69
			(reduce using rule 19)

	'OR'           shift, and enter state 70
			(reduce using rule 19)

	'to'           reduce using rule 19
	'do'           reduce using rule 19
	';'            reduce using rule 19


State 78

	Exp -> 'sin' Exp .                                  (rule 17)
	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            shift, and enter state 60
			(reduce using rule 17)

	'>'            shift, and enter state 61
			(reduce using rule 17)

	'<='           shift, and enter state 62
			(reduce using rule 17)

	'>='           shift, and enter state 63
			(reduce using rule 17)

	'+'            shift, and enter state 64
			(reduce using rule 17)

	'-'            shift, and enter state 65
			(reduce using rule 17)

	'*'            shift, and enter state 66
			(reduce using rule 17)

	'/'            shift, and enter state 67
			(reduce using rule 17)

	')'            reduce using rule 17
	'AND'          shift, and enter state 69
			(reduce using rule 17)

	'OR'           shift, and enter state 70
			(reduce using rule 17)

	'to'           reduce using rule 17
	'do'           reduce using rule 17
	';'            reduce using rule 17


State 79

	Exp -> 'ln' Exp .                                   (rule 16)
	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            shift, and enter state 60
			(reduce using rule 16)

	'>'            shift, and enter state 61
			(reduce using rule 16)

	'<='           shift, and enter state 62
			(reduce using rule 16)

	'>='           shift, and enter state 63
			(reduce using rule 16)

	'+'            shift, and enter state 64
			(reduce using rule 16)

	'-'            shift, and enter state 65
			(reduce using rule 16)

	'*'            shift, and enter state 66
			(reduce using rule 16)

	'/'            shift, and enter state 67
			(reduce using rule 16)

	')'            reduce using rule 16
	'AND'          shift, and enter state 69
			(reduce using rule 16)

	'OR'           shift, and enter state 70
			(reduce using rule 16)

	'to'           reduce using rule 16
	'do'           reduce using rule 16
	';'            reduce using rule 16


State 80

	Exp -> 'sqrt' Exp .                                 (rule 15)
	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            shift, and enter state 60
			(reduce using rule 15)

	'>'            shift, and enter state 61
			(reduce using rule 15)

	'<='           shift, and enter state 62
			(reduce using rule 15)

	'>='           shift, and enter state 63
			(reduce using rule 15)

	'+'            shift, and enter state 64
			(reduce using rule 15)

	'-'            shift, and enter state 65
			(reduce using rule 15)

	'*'            shift, and enter state 66
			(reduce using rule 15)

	'/'            shift, and enter state 67
			(reduce using rule 15)

	')'            reduce using rule 15
	'AND'          shift, and enter state 69
			(reduce using rule 15)

	'OR'           shift, and enter state 70
			(reduce using rule 15)

	'to'           reduce using rule 15
	'do'           reduce using rule 15
	';'            reduce using rule 15


State 81

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> '(' Exp . ')'                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)
	Statement -> ID ':=' '(' Exp . ')' ';'              (rule 39)

	'<'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<='           shift, and enter state 62
	'>='           shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            shift, and enter state 85
	'AND'          shift, and enter state 69
	'OR'           shift, and enter state 70


State 82

	Exp -> '-' Exp .                                    (rule 14)
	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            reduce using rule 14
	'>'            reduce using rule 14
	'<='           reduce using rule 14
	'>='           reduce using rule 14
	'+'            reduce using rule 14
	'-'            reduce using rule 14
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 14
	'AND'          shift, and enter state 69
			(reduce using rule 14)

	'OR'           shift, and enter state 70
			(reduce using rule 14)

	'to'           reduce using rule 14
	'do'           reduce using rule 14
	';'            reduce using rule 14


State 83

	Exp -> '+' Exp .                                    (rule 13)
	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            reduce using rule 13
	'>'            reduce using rule 13
	'<='           reduce using rule 13
	'>='           reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 13
	'AND'          shift, and enter state 69
			(reduce using rule 13)

	'OR'           shift, and enter state 70
			(reduce using rule 13)

	'to'           reduce using rule 13
	'do'           reduce using rule 13
	';'            reduce using rule 13


State 84

	Statement -> ID ':=' Exp ';' .                      (rule 40)

	ID             reduce using rule 40
	'end'          reduce using rule 40
	'for'          reduce using rule 40
	'while'        reduce using rule 40
	'var'          reduce using rule 40
	'writeln'      reduce using rule 40
	'if'           reduce using rule 40


State 85

	Exp -> '(' Exp ')' .                                (rule 24)
	Statement -> ID ':=' '(' Exp ')' . ';'              (rule 39)

	'<'            reduce using rule 24
	'>'            reduce using rule 24
	'<='           reduce using rule 24
	'>='           reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	'AND'          reduce using rule 24
	'OR'           reduce using rule 24
	';'            shift, and enter state 106
			(reduce using rule 24)



State 86

	Statement -> 'for' ID ':=' Exp 'to' . Exp 'do' 'begin' Statements 'end'    (rule 45)

	float          shift, and enter state 36
	ID             shift, and enter state 37
	'+'            shift, and enter state 38
	'-'            shift, and enter state 39
	'('            shift, and enter state 51
	'true'         shift, and enter state 41
	'false'        shift, and enter state 42
	'sqrt'         shift, and enter state 43
	'ln'           shift, and enter state 44
	'sin'          shift, and enter state 45
	'exp'          shift, and enter state 46
	'cos'          shift, and enter state 47
	'not'          shift, and enter state 48

	Exp            goto state 105

State 87

	Statement -> 'while' '(' Exp ')' 'do' . 'begin' Statements 'end'    (rule 44)

	'begin'        shift, and enter state 104


State 88

	Exp -> '(' Exp ')' .                                (rule 24)

	'<'            reduce using rule 24
	'>'            reduce using rule 24
	'<='           reduce using rule 24
	'>='           reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	')'            reduce using rule 24
	'AND'          reduce using rule 24
	'OR'           reduce using rule 24
	'to'           reduce using rule 24
	'do'           reduce using rule 24
	';'            reduce using rule 24


State 89

	Statement -> 'writeln' '(' Exp ')' ';' .            (rule 42)

	ID             reduce using rule 42
	'end'          reduce using rule 42
	'for'          reduce using rule 42
	'while'        reduce using rule 42
	'var'          reduce using rule 42
	'writeln'      reduce using rule 42
	'if'           reduce using rule 42


State 90

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)
	Exp -> Exp 'OR' Exp .                               (rule 35)

	'<'            shift, and enter state 60
			(reduce using rule 35)

	'>'            shift, and enter state 61
			(reduce using rule 35)

	'<='           shift, and enter state 62
			(reduce using rule 35)

	'>='           shift, and enter state 63
			(reduce using rule 35)

	'+'            shift, and enter state 64
			(reduce using rule 35)

	'-'            shift, and enter state 65
			(reduce using rule 35)

	'*'            shift, and enter state 66
			(reduce using rule 35)

	'/'            shift, and enter state 67
			(reduce using rule 35)

	')'            reduce using rule 35
	'AND'          shift, and enter state 69
			(reduce using rule 35)

	'OR'           shift, and enter state 70
			(reduce using rule 35)

	'to'           reduce using rule 35
	'do'           reduce using rule 35
	';'            reduce using rule 35


State 91

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp 'AND' Exp .                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            shift, and enter state 60
			(reduce using rule 34)

	'>'            shift, and enter state 61
			(reduce using rule 34)

	'<='           shift, and enter state 62
			(reduce using rule 34)

	'>='           shift, and enter state 63
			(reduce using rule 34)

	'+'            shift, and enter state 64
			(reduce using rule 34)

	'-'            shift, and enter state 65
			(reduce using rule 34)

	'*'            shift, and enter state 66
			(reduce using rule 34)

	'/'            shift, and enter state 67
			(reduce using rule 34)

	')'            reduce using rule 34
	'AND'          shift, and enter state 69
			(reduce using rule 34)

	'OR'           shift, and enter state 70
			(reduce using rule 34)

	'to'           reduce using rule 34
	'do'           reduce using rule 34
	';'            reduce using rule 34


State 92

	Statement -> 'if' '(' Exp ')' 'then' . 'begin' Statements 'end'    (rule 43)

	'begin'        shift, and enter state 103


State 93

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp '/' Exp .                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            reduce using rule 20
	'>'            reduce using rule 20
	'<='           reduce using rule 20
	'>='           reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	')'            reduce using rule 20
	'AND'          shift, and enter state 69
			(reduce using rule 20)

	'OR'           shift, and enter state 70
			(reduce using rule 20)

	'to'           reduce using rule 20
	'do'           reduce using rule 20
	';'            reduce using rule 20


State 94

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp '*' Exp .                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            reduce using rule 23
	'>'            reduce using rule 23
	'<='           reduce using rule 23
	'>='           reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	')'            reduce using rule 23
	'AND'          shift, and enter state 69
			(reduce using rule 23)

	'OR'           shift, and enter state 70
			(reduce using rule 23)

	'to'           reduce using rule 23
	'do'           reduce using rule 23
	';'            reduce using rule 23


State 95

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp '-' Exp .                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            reduce using rule 21
	'>'            reduce using rule 21
	'<='           reduce using rule 21
	'>='           reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 21
	'AND'          shift, and enter state 69
			(reduce using rule 21)

	'OR'           shift, and enter state 70
			(reduce using rule 21)

	'to'           reduce using rule 21
	'do'           reduce using rule 21
	';'            reduce using rule 21


State 96

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp '+' Exp .                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            reduce using rule 22
	'>'            reduce using rule 22
	'<='           reduce using rule 22
	'>='           reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 22
	'AND'          shift, and enter state 69
			(reduce using rule 22)

	'OR'           shift, and enter state 70
			(reduce using rule 22)

	'to'           reduce using rule 22
	'do'           reduce using rule 22
	';'            reduce using rule 22


State 97

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp '>=' Exp .                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 33
	'AND'          shift, and enter state 69
			(reduce using rule 33)

	'OR'           shift, and enter state 70
			(reduce using rule 33)

	'to'           reduce using rule 33
	'do'           reduce using rule 33
	';'            reduce using rule 33


State 98

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp '<=' Exp .                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 32
	'AND'          shift, and enter state 69
			(reduce using rule 32)

	'OR'           shift, and enter state 70
			(reduce using rule 32)

	'to'           reduce using rule 32
	'do'           reduce using rule 32
	';'            reduce using rule 32


State 99

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp '>' Exp .                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 31
	'AND'          shift, and enter state 69
			(reduce using rule 31)

	'OR'           shift, and enter state 70
			(reduce using rule 31)

	'to'           reduce using rule 31
	'do'           reduce using rule 31
	';'            reduce using rule 31


State 100

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp '<' Exp .                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)

	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 30
	'AND'          shift, and enter state 69
			(reduce using rule 30)

	'OR'           shift, and enter state 70
			(reduce using rule 30)

	'to'           reduce using rule 30
	'do'           reduce using rule 30
	';'            reduce using rule 30


State 101

	Definition -> 'var' ID ':' Type ':=' Exp ';' .      (rule 5)

	ID             reduce using rule 5
	'begin'        reduce using rule 5
	'end'          reduce using rule 5
	'for'          reduce using rule 5
	'while'        reduce using rule 5
	'var'          reduce using rule 5
	'writeln'      reduce using rule 5
	'if'           reduce using rule 5


State 102

	Definition -> 'var' ID_List ':' Type ':=' Exp ';' .    (rule 7)

	ID             reduce using rule 7
	'begin'        reduce using rule 7
	'end'          reduce using rule 7
	'for'          reduce using rule 7
	'while'        reduce using rule 7
	'var'          reduce using rule 7
	'writeln'      reduce using rule 7
	'if'           reduce using rule 7


State 103

	Statement -> 'if' '(' Exp ')' 'then' 'begin' . Statements 'end'    (rule 43)

	ID             shift, and enter state 13
	'end'          reduce using rule 36
	'for'          shift, and enter state 14
	'while'        shift, and enter state 15
	'var'          shift, and enter state 4
	'writeln'      shift, and enter state 16
	'if'           shift, and enter state 17

	Definition     goto state 10
	Statements     goto state 109
	Statement      goto state 12

State 104

	Statement -> 'while' '(' Exp ')' 'do' 'begin' . Statements 'end'    (rule 44)

	ID             shift, and enter state 13
	'end'          reduce using rule 36
	'for'          shift, and enter state 14
	'while'        shift, and enter state 15
	'var'          shift, and enter state 4
	'writeln'      shift, and enter state 16
	'if'           shift, and enter state 17

	Definition     goto state 10
	Statements     goto state 108
	Statement      goto state 12

State 105

	Exp -> Exp . '/' Exp                                (rule 20)
	Exp -> Exp . '-' Exp                                (rule 21)
	Exp -> Exp . '+' Exp                                (rule 22)
	Exp -> Exp . '*' Exp                                (rule 23)
	Exp -> Exp . '<' Exp                                (rule 30)
	Exp -> Exp . '>' Exp                                (rule 31)
	Exp -> Exp . '<=' Exp                               (rule 32)
	Exp -> Exp . '>=' Exp                               (rule 33)
	Exp -> Exp . 'AND' Exp                              (rule 34)
	Exp -> Exp . 'OR' Exp                               (rule 35)
	Statement -> 'for' ID ':=' Exp 'to' Exp . 'do' 'begin' Statements 'end'    (rule 45)

	'<'            shift, and enter state 60
	'>'            shift, and enter state 61
	'<='           shift, and enter state 62
	'>='           shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'AND'          shift, and enter state 69
	'OR'           shift, and enter state 70
	'do'           shift, and enter state 107


State 106

	Statement -> ID ':=' '(' Exp ')' ';' .              (rule 39)

	ID             reduce using rule 39
	'end'          reduce using rule 39
	'for'          reduce using rule 39
	'while'        reduce using rule 39
	'var'          reduce using rule 39
	'writeln'      reduce using rule 39
	'if'           reduce using rule 39


State 107

	Statement -> 'for' ID ':=' Exp 'to' Exp 'do' . 'begin' Statements 'end'    (rule 45)

	'begin'        shift, and enter state 112


State 108

	Statement -> 'while' '(' Exp ')' 'do' 'begin' Statements . 'end'    (rule 44)

	'end'          shift, and enter state 111


State 109

	Statement -> 'if' '(' Exp ')' 'then' 'begin' Statements . 'end'    (rule 43)

	'end'          shift, and enter state 110


State 110

	Statement -> 'if' '(' Exp ')' 'then' 'begin' Statements 'end' .    (rule 43)

	ID             reduce using rule 43
	'end'          reduce using rule 43
	'for'          reduce using rule 43
	'while'        reduce using rule 43
	'var'          reduce using rule 43
	'writeln'      reduce using rule 43
	'if'           reduce using rule 43


State 111

	Statement -> 'while' '(' Exp ')' 'do' 'begin' Statements 'end' .    (rule 44)

	ID             reduce using rule 44
	'end'          reduce using rule 44
	'for'          reduce using rule 44
	'while'        reduce using rule 44
	'var'          reduce using rule 44
	'writeln'      reduce using rule 44
	'if'           reduce using rule 44


State 112

	Statement -> 'for' ID ':=' Exp 'to' Exp 'do' 'begin' . Statements 'end'    (rule 45)

	ID             shift, and enter state 13
	'end'          reduce using rule 36
	'for'          shift, and enter state 14
	'while'        shift, and enter state 15
	'var'          shift, and enter state 4
	'writeln'      shift, and enter state 16
	'if'           shift, and enter state 17

	Definition     goto state 10
	Statements     goto state 113
	Statement      goto state 12

State 113

	Statement -> 'for' ID ':=' Exp 'to' Exp 'do' 'begin' Statements . 'end'    (rule 45)

	'end'          shift, and enter state 114


State 114

	Statement -> 'for' ID ':=' Exp 'to' Exp 'do' 'begin' Statements 'end' .    (rule 45)

	ID             reduce using rule 45
	'end'          reduce using rule 45
	'for'          reduce using rule 45
	'while'        reduce using rule 45
	'var'          reduce using rule 45
	'writeln'      reduce using rule 45
	'if'           reduce using rule 45


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 46
Number of terminals: 44
Number of non-terminals: 9
Number of states: 115
